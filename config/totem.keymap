//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <175>;
    global-quick-tap;
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
};

&lt { flavor = "hold-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        nordicA {
            bindings = <&nordic_A>;
            key-positions = <17 18>;
            layers = <0>;
        };

        NordicAA {
            bindings = <&nordics_a>;
            key-positions = <16 17>;
            layers = <0>;
        };

        swedishao {
            bindings = <&kp LA(A)>;
            key-positions = <6 7>;
            layers = <0>;
        };

        nordic_Ao {
            bindings = <&kp LA(LS(A))>;
            key-positions = <7 8>;
            layers = <0>;
        };

        copyy {
            bindings = <&copys>;
            key-positions = <22 23>;
            layers = <0>;
        };

        ppaste {
            bindings = <&pastes>;
            key-positions = <23 24>;
            layers = <0>;
        };

        swedo {
            bindings = <&sweddisho>;
            key-positions = <27 28>;
            layers = <0>;
        };

        sweo {
            bindings = <&sedo>;
            key-positions = <29 28>;
            layers = <0>;
        };

        NordicsAWind {
            bindings = <&nordicAWin>;
            key-positions = <7 8>;
            layers = <1>;
        };

        sweddOwindss {
            bindings = <&swedOwindows>;
            key-positions = <28 29>;
            layers = <1>;
        };

        sewina {
            bindings = <&swedawin>;
            key-positions = <6 7>;
            layers = <1>;
        };

        sewinod {
            bindings = <&swedowinds>;
            key-positions = <27 28>;
            layers = <1>;
        };

        mordaowi {
            bindings = <&norwinao>;
            key-positions = <16 17>;
            layers = <1>;
        };

        sweAOWIjndows {
            bindings = <&notsweAO>;
            key-positions = <17 18>;
            layers = <1>;
        };

        windcop {
            bindings = <&copWInd>;
            key-positions = <22 23>;
            layers = <1>;
        };

        dinpst {
            bindings = <&pstWind>;
            key-positions = <24 23>;
            layers = <1>;
        };
    };

    macros {
        nordics_a: nordics_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
        };

        nordic_A: nordic_A {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(A)>;
        };

        copys: cpy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
        };

        pastes: pst {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
        };

        sweddisho: sweddisho {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "SWEDDISHO";
        };

        sedo: sedo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(O)>;
            label = "SEDO";
        };

        nordicAWin: nordicAWin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(RA(W))>;
            label = "NORDICAWIN";
        };

        swedOwindows: swedOwindows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(P))>;
            label = "SWEDOWINDOWS";
        };

        swedawin: swedawin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(W)>;
            label = "SWEDAWIN";
        };

        swedowinds: swedowinds {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(P)>;
            label = "SWEDOWINDS";
        };

        norwinao: norwinao {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(Q)>;
            label = "NORWINAO";
        };

        notsweAO: notsweAO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(Q))>;
            label = "NOTSWEAO";
        };

        copWInd: copWInd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            label = "COPWIND";
        };

        pstWind: pstWind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
            label = "PSTWIND";
        };
    };

    behaviors {
        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <35 36 37 34 33 32 5 6 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37 7>;
        };

        right_hmr: right_hmr {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <32 33 34 35 36 37 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <35 36 37 34 33 32 5 6 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37 7>;
            label = "NEW_BEHAVIOR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_mac {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "BASEMAC";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp Q             &kp W             &kp E              &kp R              &kp T         &kp Y      &kp U               &kp I               &kp O              &kp P
           &left_hrm LGUI A  &left_hrm LALT S  &left_hrm LCTRL D  &left_hrm LSHFT F  &kp G         &kp H      &right_hmr RSHFT J  &right_hmr RCTRL K  &right_hmr RALT L  &right_hmr RGUI SEMICOLON
&kp MINUS  &kp Z             &kp X             &kp C              &kp V              &kp B         &kp N      &kp M               &kp COMMA           &kp DOT            &kp FSLH                   &kp BSLH
                                               &lt 4 TAB          &lt 3 SPACE        &kp ESCAPE    &kp ENTER  &lt 2 BACKSPACE     &kp DEL
            >;
        };

        base_windows {
            display-name = "BASE";
            bindings = <
           &kp Q             &kp W             &kp E              &kp R              &kp T         &kp Y      &kp U               &kp I               &kp O              &kp P
           &left_hrm LGUI A  &left_hrm LALT S  &left_hrm LCTRL D  &left_hrm LSHFT F  &kp G         &kp H      &right_hmr RSHFT J  &right_hmr RCTRL K  &right_hmr RALT L  &right_hmr RGUI SEMICOLON
&kp MINUS  &kp Z             &kp X             &kp C              &kp V              &kp B         &kp N      &kp M               &kp COMMA           &kp DOT            &kp FSLH                   &kp BSLH
                                               &lt 4 TAB          &lt 3 SPACE        &kp ESCAPE    &kp ENTER  &lt 2 BACKSPACE     &kp DELETE
            >;
        };

        symboltree {
            bindings = <
       &kp GRAVE                &kp LT                    &kp GT                        &kp MINUS                   &kp PIPE         &kp CARET  &kp LEFT_BRACE                           &kp RIGHT_BRACE                             &kp DOLLAR                      &kp QUESTION
       &left_hrm LEFT_GUI EXCL  &left_hrm RIGHT_ALT STAR  &left_hrm LEFT_CONTROL SLASH  &left_hrm LEFT_SHIFT EQUAL  &kp AMPERSAND    &kp HASH   &right_hmr RIGHT_SHIFT LEFT_PARENTHESIS  &right_hmr RIGHT_CONTROL RIGHT_PARENTHESIS  &right_hmr RIGHT_ALT SEMICOLON  &right_hmr RIGHT_GUI DOUBLE_QUOTES
&none  &kp TILDE                &kp PLUS                  &kp LEFT_BRACKET              &kp RIGHT_BRACKET           &kp PERCENT      &kp AT     &kp COLON                                &kp COMMA                                   &kp DOT                         &kp APOSTROPHE                      &none
                                                          &kp TAB                       &kp SPACE                   &kp ESCAPE       &none      &none                                    &none
            >;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &none         &none                &kp UP                             &none                       &kp KP_NUMLOCK    &none      &kp KP_N7                           &kp KP_N8                       &kp KP_N9                         &kp MINUS
        &kp LEFT_GUI  &left_hrm LALT LEFT  &left_hrm LEFT_CONTROL DOWN_ARROW  &left_hrm LEFT_SHIFT RIGHT  &kp INSERT        &kp DOT    &right_hmr RIGHT_SHIFT KP_NUMBER_4  &right_hmr RIGHT_CONTROL KP_N5  &right_hmr RIGHT_ALT KP_NUMBER_6  &right_hmr RIGHT_COMMAND PLUS
&trans  &trans        &kp PG_UP            &caps_word                         &kp PG_DN                   &none             &none      &kp KP_N1                           &kp KP_N2                       &kp KP_N3                         &kp SLASH                      &kp KP_MULTIPLY
                                           &trans                             &trans                      &trans            &kp ENTER  &kp KP_N0                           &kp COMMA
            >;
        };

        functionLayer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            display-name = "ADJ";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &trans            &tog 0        &tog 1            &trans          &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans            &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2    &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                        &trans            &trans          &trans    &trans  &trans  &trans
            >;
        };
    };
};
